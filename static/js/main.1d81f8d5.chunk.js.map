{"version":3,"sources":["components/Cases/Cases.jsx","components/Hire/Hire.jsx","components/CursorProvider/CursorProvider.jsx","components/MainPageButton/MainPageButton.jsx","components/Story/Story.jsx","components/TypingText/TypingText.jsx","components/MainPage/MainPage.jsx","App.js","index.js"],"names":["Cases","isClicked","canvases","isCanvasesHidded","isCasesEntered","useEffect","map","i","classList","add","remove","className","Hire","isHireEntered","CursorContext","React","createContext","SUPPORTED_CURSORS","CursorProvider","children","useState","x","y","mousePosition","setMousePosition","cursor","setCursor","onMouseMove","event","pageX","pageY","document","addEventListener","removeEventListener","Provider","value","onCursor","cursorType","includes","onHideCursor","onVisibleCursor","cx","active","style","left","top","MainPageButton","forwardRef","ref","title","isHovered","onClick","useContext","Error","useCursor","Story","isStoryEntered","TypingText","element","useRef","typed","Typed","current","strings","startDelay","typeSpeed","backSpeed","backDelay","loop","destroy","applyLayout","canvas","width","clientWidth","height","clientHeight","MainPage","buttonsCoords","setButtonsCoords","is1BtnHovered","setIs1BtnHovered","is2BtnHovered","setIs2BtnHovered","is3BtnHovered","setIs3BtnHovered","btn1Ref","btn2Ref","btn3Ref","canvas1","getElementById","canvas2","canvas3","isCasesClicked","setIsCasesClicked","setIsCasesEntered","isStoryClicked","setIsStoryClicked","setIsStoryEntered","isHireClicked","setIsHireClicked","setIsHireEntered","setIsCanvasesHidded","on1BtnEnter","on1BtnLeave","on2BtnEnter","on2BtnLeave","on3BtnEnter","on3BtnLeave","drawAnimLine","mouseCoords","elementCoords","ctx","getContext","requestAnimationFrame","clearRect","x1","window","scrollX","y1","scrollY","from","to","stroke","createLinearGradient","addColorStop","strokeStyle","lineWidth","beginPath","moveTo","lineTo","joinPoints","onMove","e","length","clientX","clientY","getBoundingClientRect","setIsClicked","App","setIsLoading","setTimeout","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1d81f8d5.chunk.js","sourcesContent":["import React,{useEffect} from 'react'\nimport './Cases.css'\n\nexport const Cases = ({ isClicked, canvases, isCanvasesHidded, isCasesEntered }) => {\n    const offCanvases = () => {\n        canvases.map((i) => i.classList.add('displayNone'))\n    }\n    const onCanvases = () => {\n        canvases.map((i) => i.classList.remove('displayNone'))\n    }\n    useEffect(() => {\n        if (isCanvasesHidded) offCanvases()\n        else onCanvases()\n    }, [isCanvasesHidded])\n\n    useEffect(() => {\n        if(!isCasesEntered && isCanvasesHidded) canvases[0].classList.add('displayNone')\n        else canvases[0].classList.remove('displayNone')\n    }, [isCasesEntered])\n\n    if (isClicked) {\n        return <div className=\"casesLayout\">\n            <div className=\"casesBtn gradientBtn\">\n                <p>Explore<br />all<br />cases</p>\n            </div>\n        </div>\n    } else return null\n}","import React, { useEffect } from 'react'\nimport './Hire.css'\n\nexport const Hire = ({\n    isClicked,\n    canvases,\n    isCanvasesHidded,\n    isHireEntered,\n}) => {\n    const offCanvases = () => {\n        canvases.map((i) => i.classList.add('displayNone'))\n    }\n    const onCanvases = () => {\n        canvases.map((i) => i.classList.remove('displayNone'))\n    }\n    useEffect(() => {\n        if (isCanvasesHidded) offCanvases()\n        else onCanvases()\n    }, [isCanvasesHidded])\n\n    useEffect(() => {\n        if (!isHireEntered && isCanvasesHidded)\n            canvases[2].classList.add('displayNone')\n        else canvases[2].classList.remove('displayNone')\n    }, [isHireEntered])\n\n   \n    if (isClicked) {\n        return (<div className=\"hireLayout\">\n            <div className=\"hireBtn gradientBtn\">\n                <p>chat with us<br /> in telegram</p>\n            </div>\n        </div>)\n    } else return null\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport './CursorProvider.css'\nimport cx from 'classnames'\nexport const CursorContext = React.createContext('cursorContext')\n\nconst SUPPORTED_CURSORS = [false, 'pointer', 'right', 'left']\n\nconst CursorProvider = ({ children }) => {\n    const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 })\n    const [cursor, setCursor] = useState(true)\n\n    const onHideCursor = () => setCursor(false)\n    const onVisibleCursor = () => setCursor(true)\n\n    const onMouseMove = (event) => {\n        const { pageX: x, pageY: y } = event\n        setMousePosition({ x, y })\n    }\n\n    useEffect(() => {\n        document.addEventListener('mousemove', onMouseMove)\n\n        return () => {\n            document.removeEventListener('mousemove', onMouseMove)\n        }\n    })\n\n    const { x, y } = mousePosition\n\n    const onCursor = (cursorType) => {\n        cursorType =\n            (SUPPORTED_CURSORS.includes(cursorType) && cursorType) || false\n        setCursor(cursorType)\n    }\n\n    return (\n        <CursorContext.Provider value={{ onCursor, onHideCursor, onVisibleCursor }}>\n            <ins\n                className={cx(cursor && 'movable', {\n                    active: !!cursor,\n                    [`cursor-${cursor}`]: !!cursor,\n                })}\n                style={{\n                    left: `${x}px`,\n                    top: `${y}px`,\n                }}\n            />\n            {children}\n        </CursorContext.Provider>\n    )\n}\n\nexport default CursorProvider\n\nexport const useCursor = () => {\n    const value = useContext(CursorContext)\n\n    if (!value) {\n        throw new Error('cursor context cannot be used outside Provider')\n    }\n\n    return value\n}\n","import React, { useEffect, forwardRef } from 'react'\nimport { useCursor } from '../CursorProvider/CursorProvider'\nimport './MainPageButton.css'\n\nexport const MainPageButton = forwardRef(\n    ({ title, className, isHovered, onClick }, ref) => {\n        const { onHideCursor, onVisibleCursor } = useCursor()\n\n        useEffect(() => {\n            if (isHovered) {\n                onHideCursor()\n            } else {\n                onVisibleCursor()\n            }\n        }, [isHovered])\n\n        return (\n            <div>\n                <div\n                    onClick={() => onClick()}\n                    ref={ref}\n                    className={`${className} MainPageButton`}\n                >\n                    {isHovered && (\n                        <>\n                            <span className=\"first__dot\"></span>\n                            <span className=\"second__dot\"></span>\n                            <span className=\"third__dot\"></span>\n                        </>\n                    )}\n\n                    {title}\n                </div>\n            </div>\n        )\n    }\n)\n","import React, { useEffect }  from 'react';\nimport './Story.css'\n\nexport const Story = ({ isClicked, canvases, isCanvasesHidded, isStoryEntered }) => {\n    const offCanvases = () => {\n        canvases.map((i) => i.classList.add('displayNone'))\n    }\n    const onCanvases = () => {\n        canvases.map((i) => i.classList.remove('displayNone'))\n    }\n    useEffect(() => {\n        if (isCanvasesHidded) offCanvases()\n        else onCanvases()\n    }, [isCanvasesHidded])\n\n    useEffect(() => {\n        if(!isStoryEntered && isCanvasesHidded) canvases[1].classList.add('displayNone')\n        else canvases[1].classList.remove('displayNone')\n    }, [isStoryEntered])\n\n    if (isClicked) {\n        return <div className=\"storyLayout\">\n            <div className=\"storyBtn gradientBtn\">\n                <p>View our<br />expertise &<br />technologies</p>\n            </div>\n        </div>\n    } else return null\n};\n\n","import React, { useEffect, useRef } from 'react'\nimport Typed from 'typed.js'\nimport './TypingText.css'\n\nconst TypingText = () => {\n    const element = useRef(null)\n\n    useEffect(() => {\n        const typed = new Typed(element.current, {\n            strings: [\n                'Welcome to WeareFX, creative studio with big ideas',\n                'Where beauty and function are crafted together',\n                'Working across all media channels & platforms',\n            ],\n            startDelay: 300,\n            typeSpeed: 30,\n            backSpeed: 10,\n            backDelay: 900,\n            loop: true,\n        })\n        return () => typed.destroy()\n    }, [])\n\n    return (\n        <div className=\"typing__text\">\n            <span className=\"typing__text\" ref={element}></span>\n        </div>\n    )\n}\n\nexport default TypingText\n","import React, { useEffect, useState, useRef } from 'react'\nimport { Cases } from '../Cases/Cases'\nimport { Hire } from '../Hire/Hire'\nimport { MainPageButton } from '../MainPageButton/MainPageButton'\nimport { Story } from '../Story/Story'\nimport TypingText from '../TypingText/TypingText'\nimport './MainPage.css'\n\nconst applyLayout = (canvas) => {\n    canvas.width = canvas.clientWidth\n    canvas.height = canvas.clientHeight\n}\n\nconst MainPage = () => {\n    const [buttonsCoords, setButtonsCoords] = useState([])\n\n    const [is1BtnHovered, setIs1BtnHovered] = useState(false)\n    const [is2BtnHovered, setIs2BtnHovered] = useState(false)\n    const [is3BtnHovered, setIs3BtnHovered] = useState(false)\n\n    const btn1Ref = useRef(null)\n    const btn2Ref = useRef(null)\n    const btn3Ref = useRef(null)\n\n    const canvas1 = document.getElementById('overlay1')\n    const canvas2 = document.getElementById('overlay2')\n    const canvas3 = document.getElementById('overlay3')\n\n    const [isCasesClicked, setIsCasesClicked] = useState(false)\n    const [isCasesEntered, setIsCasesEntered] = useState(false)\n\n    const [isStoryClicked, setIsStoryClicked] = useState(false)\n    const [isStoryEntered, setIsStoryEntered] = useState(false)\n\n    const [isHireClicked, setIsHireClicked] = useState(false)\n    const [isHireEntered, setIsHireEntered] = useState(false)\n\n    const [isCanvasesHidded, setIsCanvasesHidded] = useState(false)\n\n    const on1BtnEnter = () => {\n        setIs1BtnHovered(true)\n        setIsCasesEntered(true)\n        canvas1.classList.add('displayNone')\n    }\n    const on1BtnLeave = () => {\n        setIsCasesEntered(false)\n        canvas1.classList.remove('displayNone')\n        setIs1BtnHovered(false)\n    }\n    const on2BtnEnter = () => {\n        setIsStoryEntered(true)\n        canvas2.classList.add('displayNone')\n        setIs2BtnHovered(true)\n    }\n    const on2BtnLeave = () => {\n        setIsStoryEntered(false)\n        canvas2.classList.remove('displayNone')\n        setIs2BtnHovered(false)\n    }\n    const on3BtnEnter = () => {\n        setIsHireEntered(true)\n        canvas3.classList.add('displayNone')\n        setIs3BtnHovered(true)\n    }\n    const on3BtnLeave = () => {\n        setIsHireEntered(false)\n        canvas3.classList.remove('displayNone')\n        setIs3BtnHovered(false)\n    }\n    const joinPoints = (ctx, from, to) => {\n        const stroke = ctx.createLinearGradient(from.x, from.y, to.x, to.y)\n        stroke.addColorStop(0, 'rgba(255, 255, 255, 0)')\n        stroke.addColorStop(0.4, 'rgba(255, 255, 255, 0.2)')\n        stroke.addColorStop(0.5, 'white')\n        stroke.addColorStop(1, 'rgba(255, 255, 255, 0)')\n\n        ctx.strokeStyle = stroke\n        ctx.lineWidth = 1\n\n        ctx.beginPath()\n        ctx.moveTo(from.x + 40, from.y + 40)\n        if (is1BtnHovered) {\n            ctx.lineTo(buttonsCoords[0].x + 41, buttonsCoords[0].y + 22)\n        } else if (is2BtnHovered) {\n            ctx.lineTo(buttonsCoords[1].x - 17, buttonsCoords[1].y + 60)\n        } else if (is3BtnHovered) {\n            ctx.lineTo(buttonsCoords[2].x + 100, buttonsCoords[2].y + 60)\n        } else {\n            ctx.lineTo(to.x, to.y)\n        }\n        ctx.stroke()\n    }\n    function drawAnimLine(canvas, mouseCoords, elementCoords) {\n        const ctx = canvas.getContext('2d')\n        function draw() {\n            ctx.clearRect(0, 0, canvas.width, canvas.height)\n            const x1 = elementCoords.x - window.scrollX\n            const y1 = elementCoords.y - window.scrollY\n            joinPoints(ctx, { x: x1, y: y1 }, mouseCoords)\n        }\n        requestAnimationFrame(draw)\n    }\n    const onMove = (e) => {\n        if (!buttonsCoords.length) return\n        drawAnimLine(canvas1, { x: e.clientX, y: e.clientY }, buttonsCoords[0])\n        drawAnimLine(canvas2, { x: e.clientX, y: e.clientY }, buttonsCoords[1])\n        drawAnimLine(canvas3, { x: e.clientX, y: e.clientY }, buttonsCoords[2])\n    }\n    useEffect(() => {\n        applyLayout(canvas1)\n        applyLayout(canvas2)\n        applyLayout(canvas3)\n\n        btn1Ref.current.addEventListener('mouseover', on1BtnEnter)\n        btn1Ref.current.addEventListener('mouseleave', on1BtnLeave)\n\n        btn2Ref.current.addEventListener('mouseover', on2BtnEnter)\n        btn2Ref.current.addEventListener('mouseleave', on2BtnLeave)\n\n        btn3Ref.current.addEventListener('mouseover', on3BtnEnter)\n        btn3Ref.current.addEventListener('mouseleave', on3BtnLeave)\n\n        if (!buttonsCoords.length) {\n            setButtonsCoords([\n                btn1Ref.current?.getBoundingClientRect(),\n                btn2Ref.current?.getBoundingClientRect(),\n                btn3Ref.current?.getBoundingClientRect(),\n            ])\n        }\n        window.addEventListener('mousemove', onMove)\n\n        return () => {\n            window.removeEventListener('mousemove', onMove)\n\n            btn1Ref.current.removeEventListener('mouseover', on1BtnEnter)\n            btn1Ref.current.removeEventListener('mouseleave', on1BtnLeave)\n\n            btn2Ref.current.removeEventListener('mouseover', on2BtnEnter)\n            btn2Ref.current.removeEventListener('mouseleave', on2BtnLeave)\n\n            btn3Ref.current.removeEventListener('mouseover', on3BtnEnter)\n            btn3Ref.current.removeEventListener('mouseleave', on3BtnLeave)\n        }\n    }, [buttonsCoords.length, is1BtnHovered, is2BtnHovered, is3BtnHovered])\n\n    const casesClicked = () => {\n        setIsCanvasesHidded(!isCanvasesHidded)\n        setIsCasesClicked(!isCasesClicked)\n    }\n    const storyClicked = () => {\n        setIsCanvasesHidded(!isCanvasesHidded)\n        setIsStoryClicked(!isStoryClicked)\n    }\n    const hireClicked = () => {\n        setIsCanvasesHidded(!isCanvasesHidded)\n        setIsHireClicked(!isHireClicked)\n    }\n\n    return (\n        <div>\n            <div className=\"showreel\">{/* video */}</div>\n            <MainPageButton\n                onClick={casesClicked}\n                isHovered={is1BtnHovered}\n                title=\"cases\"\n                className=\"firstCircle\"\n                ref={btn1Ref}\n            />\n            <MainPageButton\n                onClick={storyClicked}\n                isHovered={is2BtnHovered}\n                title=\"story\"\n                className=\"secondCircle\"\n                ref={btn2Ref}\n            />\n            <MainPageButton\n                onClick={hireClicked}\n                isHovered={is3BtnHovered}\n                title=\"hire us\"\n                className=\"thirdCircle\"\n                ref={btn3Ref}\n            />\n            <Cases\n                isCasesEntered={isCasesEntered}\n                isCanvasesHidded={isCanvasesHidded}\n                canvases={[canvas1, canvas2, canvas3]}\n                isClicked={isCasesClicked}\n            />\n            <Story\n                isStoryEntered={isStoryEntered}\n                isCanvasesHidded={isCanvasesHidded}\n                canvases={[canvas1, canvas2, canvas3]}\n                isClicked={isStoryClicked}\n            />\n            <Hire\n                isHireEntered={isHireEntered}\n                isCanvasesHidded={isCanvasesHidded}\n                canvases={[canvas1, canvas2, canvas3]}\n                isClicked={isHireClicked}\n                setIsClicked={setIsHireClicked}\n            />\n            <div className=\"main\">\n                <div className=\"main__top\">\n                    <TypingText />\n                    <div className=\"main__logo\" />\n                </div>\n                <div className=\"main__bottom\">\n                    <hr className=\"main__bottom__video\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MainPage\n","import React, { useEffect, useState } from 'react'\nimport Preloader from './components/Preloader/Preloader'\nimport MainPage from './components/MainPage/MainPage'\nimport './styles/Global.css'\n\nfunction App() {\n    const [isLoading, setIsLoading] = useState(false)\n\n    useEffect(() => {\n        setIsLoading(true)\n        setTimeout(() => {\n            setIsLoading(false)\n        }, 2000)\n    }, [])\n\n    // if (isLoading) {\n    //     let canvas = document.getElementById('overlay')\n    //     canvas.classList.add('displayNone')\n    //     canvas = document.getElementById('overlay2')\n    //     canvas.classList.add('displayNone')\n    //     canvas = document.getElementById('overlay3')\n    //     canvas.classList.add('displayNone')\n    //     return (<Preloader />)\n    // } else {\n        // let canvas = document.getElementById('overlay')\n        // canvas.classList.remove('displayNone')\n        // canvas = document.getElementById('overlay2')\n        // canvas.classList.remove('displayNone')\n        // canvas = document.getElementById('overlay3')\n        // canvas.classList.remove('displayNone')\n        return <div className=\"App\">{<MainPage />}</div>\n    // }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport CursorProvider from './components/CursorProvider/CursorProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CursorProvider>\n      <App />\n    </CursorProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}