{"version":3,"sources":["components/Cases/Cases.jsx","components/CursorProvider/CursorProvider.jsx","components/Hire/Hire.jsx","components/MainPageButton/MainPageButton.jsx","components/Story/Story.jsx","components/TypingText/TypingText.jsx","components/MainPage/MainPage.jsx","App.js","index.js"],"names":["Cases","isClicked","canvases","isCanvasesHidded","isCasesEntered","useEffect","map","i","classList","add","remove","useState","mcStateHovered","setMcStateHovered","pumaStateHovered","setPumaStateHovered","flintStateHovered","setFlintStateHovered","bigStateHovered","setBigStateHovered","pmStateHovered","setPMStateHovered","naviStateHovered","setNaviStateHovered","casesArray","title","id","className","onMouseEnter","onMouseLeave","CursorContext","React","createContext","SUPPORTED_CURSORS","CursorProvider","children","x","y","mousePosition","setMousePosition","cursor","setCursor","onMouseMove","event","pageX","pageY","document","addEventListener","removeEventListener","Provider","value","onCursor","cursorType","includes","onHideCursor","onVisibleCursor","cx","active","style","left","top","Hire","isHireEntered","MainPageButton","forwardRef","ref","isHovered","onClick","canvas","useContext","Error","useCursor","Story","isStoryEntered","href","TypingText","element","useRef","typed","Typed","current","strings","startDelay","typeSpeed","backSpeed","backDelay","loop","showBlink","destroy","applyLayout","width","clientWidth","height","clientHeight","MainPage","buttonsCoords","setButtonsCoords","is1BtnHovered","setIs1BtnHovered","is2BtnHovered","setIs2BtnHovered","is3BtnHovered","setIs3BtnHovered","btn1Ref","btn2Ref","btn3Ref","canvas1","getElementById","canvas2","canvas3","isCasesClicked","setIsCasesClicked","setIsCasesEntered","isStoryClicked","setIsStoryClicked","setIsStoryEntered","isHireClicked","setIsHireClicked","setIsHireEntered","setIsCanvasesHidded","on1BtnEnter","on1BtnLeave","on2BtnEnter","on2BtnLeave","on3BtnEnter","on3BtnLeave","drawAnimLine","mouseCoords","elementCoords","ctx","getContext","requestAnimationFrame","clearRect","x1","window","scrollX","y1","scrollY","from","to","stroke","createLinearGradient","addColorStop","strokeStyle","lineWidth","beginPath","moveTo","lineTo","joinPoints","onMove","e","length","clientX","clientY","getBoundingClientRect","setIsClicked","App","setIsLoading","setTimeout","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e13d62bd.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport './Cases.css'\nimport 'animate.css'\n\nexport const Cases = ({\n    isClicked,\n    canvases,\n    isCanvasesHidded,\n    isCasesEntered,\n}) => {\n    const offCanvases = () => {\n        canvases.map((i) => i.classList.add('displayNone'))\n    }\n    const onCanvases = () => {\n        canvases.map((i) => i.classList.remove('displayNone'))\n    }\n    useEffect(() => {\n        if (isCanvasesHidded) offCanvases()\n        else onCanvases()\n    }, [isCanvasesHidded])\n\n    useEffect(() => {\n        if (!isCasesEntered && isCanvasesHidded)\n            canvases[0].classList.add('displayNone')\n        else canvases[0].classList.remove('displayNone')\n    }, [isCasesEntered])\n\n    const [mcStateHovered, setMcStateHovered] = useState(false)\n    const [pumaStateHovered, setPumaStateHovered] = useState(false)\n    const [flintStateHovered, setFlintStateHovered] = useState(false)\n    const [bigStateHovered, setBigStateHovered] = useState(false)\n    const [pmStateHovered, setPMStateHovered] = useState(false)\n    const [naviStateHovered, setNaviStateHovered] = useState(false)\n\n    const onMcEnter = () => {\n        setMcStateHovered(true)\n    }\n    const onMcLeave = () => {\n        setMcStateHovered(false)\n    }\n    const onPumaEnter = () => {\n        setPumaStateHovered(true)\n    }\n    const onPumaLeave = () => {\n        setPumaStateHovered(false)\n    }\n    const onFlintEnter = () => {\n        setFlintStateHovered(true)\n    }\n    const onFlintLeave = () => {\n        setFlintStateHovered(false)\n    }\n    const onBigEnter = () => {\n        setBigStateHovered(true)\n    }\n    const onBigLeave = () => {\n        setBigStateHovered(false)\n    }\n    const onPMEnter = () => {\n        setPMStateHovered(true)\n    }\n    const onPMLeave = () => {\n        setPMStateHovered(false)\n    }\n    const onNaviEnter = () => {\n        setNaviStateHovered(true)\n    }\n    const onNaviLeave = () => {\n        setNaviStateHovered(false)\n    }\n\n    const casesArray = [\n        {\n            title: \"McDonald's\",\n            id: 1,\n            className: 'mcDonalds',\n        },\n        {\n            title: 'Puma',\n            id: 2,\n            className: 'puma',\n        },\n        {\n            title: 'Flint',\n            id: 3,\n            className: 'flint',\n        },\n        {\n            title: 'Little big',\n            id: 4,\n            className: 'littleBig',\n        },\n        {\n            title: 'Parimatch',\n            id: 5,\n            className: 'parimatch',\n        },\n        {\n            title: 'Navi',\n            id: 6,\n            className: 'navi',\n        },\n    ]\n\n    if (isClicked) {\n        return (\n            <div className=\"animate__animated animate__slideInUp casesLayout\">\n                <div className=\"casesTextBlock\">\n                    <div className=\"casesArrow\" />\n                    <p>\n                        We’re always looking the truth about the brand we work\n                        with and tell it naturaly and gorgeous, like no one else\n                        before.\n                    </p>\n                </div>\n                <div\n                    className={\n                        mcStateHovered ? 'casesMain' : 'casesMain displayNone'\n                    }\n                >\n                    <h1>McDonald's</h1>\n                    <p>Granding, VFX, motion</p>\n                </div>\n                <div\n                    className={\n                        pumaStateHovered ? 'casesMain' : 'casesMain displayNone'\n                    }\n                >\n                    <h1>Puma Ukraine</h1>\n                    <p>VFX, motion</p>\n                </div>\n                <div\n                    className={\n                        flintStateHovered\n                            ? 'casesMain'\n                            : 'casesMain displayNone'\n                    }\n                >\n                    <h1>Flint</h1>\n                    <p>Granding, VFX, motion</p>\n                </div>\n                <div\n                    className={\n                        bigStateHovered ? 'casesMain' : 'casesMain displayNone'\n                    }\n                >\n                    <h1>Little big</h1>\n                    <p>Granding, VFX, motion</p>\n                </div>\n                <div\n                    className={\n                        pmStateHovered ? 'casesMain' : 'casesMain displayNone'\n                    }\n                >\n                    <h1>Parimatch</h1>\n                    <p>Granding, VFX, motion</p>\n                </div>\n                <div\n                    className={\n                        naviStateHovered ? 'casesMain' : 'casesMain displayNone'\n                    }\n                >\n                    <h1>Navi</h1>\n                    <p>Granding, VFX, motion</p>\n                </div>\n                <div className=\"casesArray\">\n                    <div\n                        onMouseEnter={onMcEnter}\n                        onMouseLeave={onMcLeave}\n                        className={casesArray[0].className}\n                    >\n                        {casesArray[0].title}\n                    </div>\n                    <div\n                        onMouseEnter={onPumaEnter}\n                        onMouseLeave={onPumaLeave}\n                        className={casesArray[1].className}\n                    >\n                        {casesArray[1].title}\n                    </div>\n                    <div\n                        onMouseEnter={onFlintEnter}\n                        onMouseLeave={onFlintLeave}\n                        className={casesArray[2].className}\n                    >\n                        {casesArray[2].title}\n                    </div>\n                    <div\n                        onMouseEnter={onBigEnter}\n                        onMouseLeave={onBigLeave}\n                        className={casesArray[3].className}\n                    >\n                        {casesArray[3].title}\n                    </div>\n                    <div\n                        onMouseEnter={onPMEnter}\n                        onMouseLeave={onPMLeave}\n                        className={casesArray[4].className}\n                    >\n                        {casesArray[4].title}\n                    </div>\n                    <div\n                        onMouseEnter={onNaviEnter}\n                        onMouseLeave={onNaviLeave}\n                        className={casesArray[5].className}\n                    >\n                        {casesArray[5].title}\n                    </div>\n                </div>\n                <div className=\"casesBtn gradientBtn\">\n                    <p>\n                        Explore\n                        <br />\n                        all\n                        <br />\n                        cases\n                    </p>\n                </div>\n            </div>\n        )\n    } else return null\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport './CursorProvider.css'\nimport cx from 'classnames'\nexport const CursorContext = React.createContext('cursorContext')\n\nconst SUPPORTED_CURSORS = [false, 'pointer', 'right', 'left']\n\nconst CursorProvider = ({ children }) => {\n    const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 })\n    const [cursor, setCursor] = useState(true)\n\n    const onHideCursor = () => setCursor(false)\n    const onVisibleCursor = () => setCursor(true)\n\n    const onMouseMove = (event) => {\n        const { pageX: x, pageY: y } = event\n        setMousePosition({ x, y })\n    }\n\n    useEffect(() => {\n        document.addEventListener('mousemove', onMouseMove)\n\n        return () => {\n            document.removeEventListener('mousemove', onMouseMove)\n        }\n    })\n\n    const { x, y } = mousePosition\n\n    const onCursor = (cursorType) => {\n        cursorType =\n            (SUPPORTED_CURSORS.includes(cursorType) && cursorType) || false\n        setCursor(cursorType)\n    }\n\n    return (\n        <CursorContext.Provider\n            value={{ onCursor, onHideCursor, onVisibleCursor }}\n        >\n            <ins\n                className={cx(cursor && 'movable', {\n                    active: !!cursor,\n                    [`cursor-${cursor}`]: !!cursor,\n                })}\n                style={{\n                    left: `${x}px`,\n                    top: `${y}px`,\n                }}\n            />\n            {children}\n        </CursorContext.Provider>\n    )\n}\n\nexport default CursorProvider\n\nexport const useCursor = () => {\n    const value = useContext(CursorContext)\n\n    if (!value) {\n        throw new Error('cursor context cannot be used outside Provider')\n    }\n\n    return value\n}\n","import React, { useEffect } from 'react'\nimport './Hire.css'\nimport 'animate.css'\n\nexport const Hire = ({\n    isClicked,\n    canvases,\n    isCanvasesHidded,\n    isHireEntered,\n}) => {\n    const offCanvases = () => {\n        canvases.map((i) => i.classList.add('displayNone'))\n    }\n    const onCanvases = () => {\n        canvases.map((i) => i.classList.remove('displayNone'))\n    }\n    useEffect(() => {\n        if (isCanvasesHidded) offCanvases()\n        else onCanvases()\n    }, [isCanvasesHidded])\n\n    useEffect(() => {\n        if (!isHireEntered && isCanvasesHidded)\n            canvases[2].classList.add('displayNone')\n        else canvases[2].classList.remove('displayNone')\n    }, [isHireEntered])\n\n    if (isClicked) {\n        return (\n            <div className=\"hireLayout\">\n                <div className=\"hireBtn gradientBtn\">\n                    <p>\n                        chat with us\n                        <br /> in telegram\n                    </p>\n                </div>\n            </div>\n        )\n    } else return null\n}\n","import React, { useEffect, forwardRef } from 'react'\nimport { useCursor } from '../CursorProvider/CursorProvider'\nimport './MainPageButton.css'\n\nexport const MainPageButton = forwardRef(\n    ({ title, className, isHovered, onClick, isClicked, canvas }, ref) => {\n        const { onHideCursor, onVisibleCursor } = useCursor()\n\n        useEffect(() => {\n            if (isHovered) {\n                onHideCursor()\n                canvas.classList.add('displayNone')\n            } else {\n                onVisibleCursor()\n            }\n        }, [isHovered])\n\n        return (\n            <div>\n                <div\n                    onClick={() => onClick()}\n                    ref={ref}\n                    className={`${className} MainPageButton`}\n                >\n                    {!isClicked && isHovered && (\n                        <>\n                            <span className=\"first__dot\"></span>\n                            <span className=\"second__dot\"></span>\n                            <span className=\"third__dot\"></span>\n                        </>\n                    )}\n\n                    {isClicked ? ' ' : title}\n                </div>\n            </div>\n        )\n    }\n)\n","import React, { useEffect } from 'react'\nimport './Story.css'\nimport 'animate.css'\n\nexport const Story = ({\n    isClicked,\n    canvases,\n    isCanvasesHidded,\n    isStoryEntered,\n}) => {\n    const offCanvases = () => {\n        canvases.map((i) => i.classList.add('displayNone'))\n    }\n    const onCanvases = () => {\n        canvases.map((i) => i.classList.remove('displayNone'))\n    }\n    useEffect(() => {\n        if (isCanvasesHidded) offCanvases()\n        else onCanvases()\n    }, [isCanvasesHidded])\n\n    useEffect(() => {\n        if (!isStoryEntered && isCanvasesHidded)\n            canvases[1].classList.add('displayNone')\n        else canvases[1].classList.remove('displayNone')\n    }, [isStoryEntered])\n\n    if (isClicked) {\n        return (\n            <div className=\"storyLayout\">\n                <div className=\"storyBlock\">\n                    <h3>We are full-service experiential VFX production studio based in Ukraine inspired by the creative potential of emerging technologies. 😎</h3>\n                    <div>\n                        <a href=\"#\">our cases </a>\n                        <a href=\"#\">hire us </a>\n                        <div className=\"casesArrow\" />\n                        <p>As a wide collective of highly skilled creatives, we vizualize any content on any screen and any space. Create CG and VFX for Advertising, TV, Print, digital, series, short and now long format films, games, VR and AR experiences.</p>\n                        <p>A deeply collaborative approach and respect for every aspect and role in the creation process stands at our core.</p>\n                    </div>\n                </div>\n                <div className=\"storyBtn gradientBtn\">\n                    <p>\n                        View our\n                        <br />\n                        expertise &<br />\n                        technologies\n                    </p>\n                </div>\n            </div>\n        )\n    } else return null\n}\n","import React, { useEffect, useRef } from 'react'\nimport Typed from 'typed.js'\nimport './TypingText.css'\n\nconst TypingText = () => {\n    const element = useRef(null)\n\n    useEffect(() => {\n        const typed = new Typed(element.current, {\n            strings: [\n                'Welcome to WeareFX, creative studio with big ideas',\n                'Where beauty and function are crafted together',\n                'Working across all media channels & platforms',\n            ],\n            startDelay: 1000,\n            typeSpeed: 24,\n            backSpeed: 24,\n            backDelay: 1000,\n            loop: true,\n            showBlink:true,\n        })\n        return () => typed.destroy()\n    }, [])\n\n    return (\n        <div className=\"typing__text\">\n            <span className=\"typing__text\" ref={element}></span>\n        </div>\n    )\n}\n\nexport default TypingText\n","import React, { useEffect, useState, useRef } from 'react'\nimport { Cases } from '../Cases/Cases'\nimport CursorProvider from '../CursorProvider/CursorProvider'\nimport { Hire } from '../Hire/Hire'\nimport { MainPageButton } from '../MainPageButton/MainPageButton'\nimport { Story } from '../Story/Story'\nimport TypingText from '../TypingText/TypingText'\nimport './MainPage.css'\n\nconst applyLayout = (canvas) => {\n    canvas.width = canvas.clientWidth\n    canvas.height = canvas.clientHeight\n}\n\nconst MainPage = () => {\n    const [buttonsCoords, setButtonsCoords] = useState([])\n\n    const [is1BtnHovered, setIs1BtnHovered] = useState(false)\n    const [is2BtnHovered, setIs2BtnHovered] = useState(false)\n    const [is3BtnHovered, setIs3BtnHovered] = useState(false)\n\n    const btn1Ref = useRef(null)\n    const btn2Ref = useRef(null)\n    const btn3Ref = useRef(null)\n\n    const canvas1 = document.getElementById('overlay1')\n    const canvas2 = document.getElementById('overlay2')\n    const canvas3 = document.getElementById('overlay3')\n\n    const [isCasesClicked, setIsCasesClicked] = useState(false)\n    const [isCasesEntered, setIsCasesEntered] = useState(false)\n\n    const [isStoryClicked, setIsStoryClicked] = useState(false)\n    const [isStoryEntered, setIsStoryEntered] = useState(false)\n\n    const [isHireClicked, setIsHireClicked] = useState(false)\n    const [isHireEntered, setIsHireEntered] = useState(false)\n\n    const [isCanvasesHidded, setIsCanvasesHidded] = useState(false)\n\n    const on1BtnEnter = () => {\n        setIs1BtnHovered(true)\n        setIsCasesEntered(true)\n        canvas1.classList.add('displayNone')\n    }\n    const on1BtnLeave = () => {\n        setIsCasesEntered(false)\n        canvas1.classList.remove('displayNone')\n        setIs1BtnHovered(false)\n    }\n    const on2BtnEnter = () => {\n        setIsStoryEntered(true)\n        canvas2.classList.add('displayNone')\n        setIs2BtnHovered(true)\n    }\n    const on2BtnLeave = () => {\n        setIsStoryEntered(false)\n        canvas2.classList.remove('displayNone')\n        setIs2BtnHovered(false)\n    }\n    const on3BtnEnter = () => {\n        setIsHireEntered(true)\n        canvas3.classList.add('displayNone')\n        setIs3BtnHovered(true)\n    }\n    const on3BtnLeave = () => {\n        setIsHireEntered(false)\n        canvas3.classList.remove('displayNone')\n        setIs3BtnHovered(false)\n    }\n    const joinPoints = (ctx, from, to) => {\n        const stroke = ctx.createLinearGradient(from.x, from.y, to.x, to.y)\n        stroke.addColorStop(0, 'rgba(255, 255, 255, 0)')\n        stroke.addColorStop(0.4, 'rgba(255, 255, 255, 0.2)')\n        stroke.addColorStop(0.5, 'white')\n        stroke.addColorStop(1, 'rgba(255, 255, 255, 0)')\n\n        ctx.strokeStyle = stroke\n        ctx.lineWidth = 1\n\n        ctx.beginPath()\n        ctx.moveTo(from.x, from.y)\n        if (is1BtnHovered) {\n            ctx.lineTo(buttonsCoords[0].x, buttonsCoords[0].y - 15)\n        } else if (is2BtnHovered) {\n            ctx.lineTo(buttonsCoords[1].x - 60, buttonsCoords[1].y + 20)\n        } else if (is3BtnHovered) {\n            ctx.lineTo(buttonsCoords[2].x + 65, buttonsCoords[2].y + 21)\n        } else {\n            ctx.lineTo(to.x, to.y)\n        }\n        ctx.stroke()\n    }\n    function drawAnimLine(canvas, mouseCoords, elementCoords) {\n        const ctx = canvas.getContext('2d')\n        function draw() {\n            ctx.clearRect(0, 0, canvas.width, canvas.height)\n            const x1 = elementCoords.x - window.scrollX\n            const y1 = elementCoords.y - window.scrollY\n            joinPoints(ctx, { x: x1, y: y1 }, mouseCoords)\n        }\n        requestAnimationFrame(draw)\n    }\n    const onMove = (e) => {\n        if (!buttonsCoords.length) return\n        drawAnimLine(canvas1, { x: e.clientX, y: e.clientY }, buttonsCoords[0])\n        drawAnimLine(canvas2, { x: e.clientX, y: e.clientY }, buttonsCoords[1])\n        drawAnimLine(canvas3, { x: e.clientX, y: e.clientY }, buttonsCoords[2])\n    }\n    useEffect(() => {\n        applyLayout(canvas1)\n        applyLayout(canvas2)\n        applyLayout(canvas3)\n\n        btn1Ref.current.addEventListener('mouseover', on1BtnEnter)\n        btn1Ref.current.addEventListener('mouseleave', on1BtnLeave)\n\n        btn2Ref.current.addEventListener('mouseover', on2BtnEnter)\n        btn2Ref.current.addEventListener('mouseleave', on2BtnLeave)\n\n        btn3Ref.current.addEventListener('mouseover', on3BtnEnter)\n        btn3Ref.current.addEventListener('mouseleave', on3BtnLeave)\n\n        if (!buttonsCoords.length) {\n            setButtonsCoords([\n                btn1Ref.current?.getBoundingClientRect(),\n                btn2Ref.current?.getBoundingClientRect(),\n                btn3Ref.current?.getBoundingClientRect(),\n            ])\n        }\n        window.addEventListener('mousemove', onMove)\n\n        return () => {\n            window.removeEventListener('mousemove', onMove)\n\n            btn1Ref.current.removeEventListener('mouseover', on1BtnEnter)\n            btn1Ref.current.removeEventListener('mouseleave', on1BtnLeave)\n\n            btn2Ref.current.removeEventListener('mouseover', on2BtnEnter)\n            btn2Ref.current.removeEventListener('mouseleave', on2BtnLeave)\n\n            btn3Ref.current.removeEventListener('mouseover', on3BtnEnter)\n            btn3Ref.current.removeEventListener('mouseleave', on3BtnLeave)\n        }\n    }, [buttonsCoords.length, is1BtnHovered, is2BtnHovered, is3BtnHovered])\n\n    const casesClicked = () => {\n        setIsCanvasesHidded(!isCanvasesHidded)\n        setIsCasesClicked(!isCasesClicked)\n    }\n    const storyClicked = () => {\n        setIsCanvasesHidded(!isCanvasesHidded)\n        setIsStoryClicked(!isStoryClicked)\n    }\n    const hireClicked = () => {\n        setIsCanvasesHidded(!isCanvasesHidded)\n        setIsHireClicked(!isHireClicked)\n    }\n\n    return (\n        <CursorProvider>\n            <div>\n                <div className=\"showreel\">{/* video */}</div>\n                <MainPageButton\n                    canvas={canvas1}\n                    onClick={casesClicked}\n                    isHovered={is1BtnHovered}\n                    title=\"cases\"\n                    isClicked={isCasesClicked}\n                    className={\n                        isCasesClicked\n                            ? 'clickedCases firstCircle'\n                            : 'firstCircle'\n                    }\n                    ref={btn1Ref}\n                />\n                <MainPageButton\n                    canvas={canvas2}\n                    onClick={storyClicked}\n                    isHovered={is2BtnHovered}\n                    title=\"story\"\n                    ref={btn2Ref}\n                    isClicked={isStoryClicked}\n                    className={\n                        isStoryClicked\n                            ? 'clickedStory secondCircle'\n                            : 'secondCircle'\n                    }\n                />\n                <MainPageButton\n                    canvas={canvas3}\n                    onClick={hireClicked}\n                    isHovered={is3BtnHovered}\n                    title=\"hire us\"\n                    ref={btn3Ref}\n                    isClicked={isHireClicked}\n                    className={\n                        isHireClicked\n                            ? 'clickedHire thirdCircle'\n                            : 'thirdCircle'\n                    }\n                />\n                <Cases\n                    isCasesEntered={isCasesEntered}\n                    isCanvasesHidded={isCanvasesHidded}\n                    canvases={[canvas1, canvas2, canvas3]}\n                    isClicked={isCasesClicked}\n                />\n                <Story\n                    isStoryEntered={isStoryEntered}\n                    isCanvasesHidded={isCanvasesHidded}\n                    canvases={[canvas1, canvas2, canvas3]}\n                    isClicked={isStoryClicked}\n                />\n                <Hire\n                    isHireEntered={isHireEntered}\n                    isCanvasesHidded={isCanvasesHidded}\n                    canvases={[canvas1, canvas2, canvas3]}\n                    isClicked={isHireClicked}\n                    setIsClicked={setIsHireClicked}\n                />\n                <div className=\"main\">\n                    <div className=\"main__top\">\n                        <TypingText />\n                        <div className=\"main__logo\" />\n                    </div>\n                    <div className=\"main__bottom\">\n                        <hr className=\"main__bottom__video\" />\n                    </div>\n                </div>\n            </div>\n        </CursorProvider>\n    )\n}\n\nexport default MainPage\n","import React, { useEffect, useState } from 'react'\nimport Preloader from './components/Preloader/Preloader'\nimport MainPage from './components/MainPage/MainPage'\nimport './styles/Global.css'\n\nfunction App() {\n    const [isLoading, setIsLoading] = useState(false)\n\n    useEffect(() => {\n        setIsLoading(true)\n        setTimeout(() => {\n            setIsLoading(false)\n        }, 2000)\n    }, [])\n\n    // if (isLoading) {\n    //     let canvas = document.getElementById('overlay')\n    //     canvas.classList.add('displayNone')\n    //     canvas = document.getElementById('overlay2')\n    //     canvas.classList.add('displayNone')\n    //     canvas = document.getElementById('overlay3')\n    //     canvas.classList.add('displayNone')\n    //     return (<Preloader />)\n    // } else {\n        // let canvas = document.getElementById('overlay')\n        // canvas.classList.remove('displayNone')\n        // canvas = document.getElementById('overlay2')\n        // canvas.classList.remove('displayNone')\n        // canvas = document.getElementById('overlay3')\n        // canvas.classList.remove('displayNone')\n        return <div className=\"App\">{<MainPage />}</div>\n    // }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}