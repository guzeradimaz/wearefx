{"version":3,"sources":["components/Line/Line.jsx","components/useWindowDimension/useWindowDimensions.jsx","components/Cases/Cases.jsx","components/Hire/Hire.jsx","components/MainPageButton/MainPageButton.jsx","components/Story/Story.jsx","components/TypingText/TypingText.jsx","components/MainPage/video/videoPower.mp4","components/MainPage/MainPage.jsx"],"names":["Line","polyline","isClicked","coords","amount","coords1","canvas","useEffect","useRef","ctx","getContext","width","clientWidth","height","clientHeight","applyLayout","lineWidth","strokeStyle","dots","Array","dots1","dots2","dots3","stepX","Math","floor","last","x","first","stepY","y","stepX1","stepY1","getRandomInt","min","max","random","set","i","length","getWindowDimensions","window","innerWidth","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","Cases","casesArray","coordsToX","coordsToY","canvases","isCanvasesHidded","isCasesEntered","document","getElementById","classList","add","offCanvases","useCallback","map","remove","onCanvases","mcStateHovered","setMcStateHovered","pumaStateHovered","setPumaStateHovered","flintStateHovered","setFlintStateHovered","bigStateHovered","setBigStateHovered","pmStateHovered","setPMStateHovered","naviStateHovered","setNaviStateHovered","showCube","setShowCube","universalBack","setUniversalBack","prevUniversalBack","setPrevUniversalBack","navigate","useNavigate","ToFullScreen","parallaxHandler","e","m","clientX","n","clientY","style","cssText","id","className","slice","item","onMouseMove","onMouseEnter","background","onCaseEnter","onMouseLeave","onClick","title","Cube","to","Hire","isHireEntered","href","MainPageButton","forwardRef","ref","isHovered","hoverState","setHoverState","Story","isStoryEntered","TypingText","element","typed","Typed","current","strings","startDelay","typeSpeed","backSpeed","backDelay","loop","showBlink","destroy","MainPage","is1BtnHovered","is2BtnHovered","is3BtnHovered","setIs3BtnHovered","setIs2BtnHovered","setIs1BtnHovered","buttonsCoords","setButtonsCoords","btn1Ref","btn2Ref","btn3Ref","canvas1","canvas2","canvas3","polyline1","polyline2","isCasesClicked","setIsCasesClicked","setIsCasesEntered","isStoryClicked","setIsStoryClicked","setIsStoryEntered","isHireClicked","setIsHireClicked","setIsHireEntered","setIsCanvasesHidded","PlaceCursor","getElementsByClassName","on1BtnEnter","on1BtnLeave","on2BtnEnter","on2BtnLeave","on3BtnEnter","on3BtnLeave","drawAnimLine","mouseCoords","elementCoords","requestAnimationFrame","clearRect","x1","scrollX","y1","scrollY","from","stroke","createLinearGradient","addColorStop","beginPath","moveTo","lineTo","joinPoints","btnMove1","abs","transform","transition","onMove","getBoundingClientRect","autoPlay","muted","src","videoPower","type","setIsClicked"],"mappings":"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","file":"static/js/3.ae51437c.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react'\n\nconst applyLayout = (canvas) => {\n    canvas.width = canvas.clientWidth\n    canvas.height = canvas.clientHeight\n}\n\nexport default function Line({ polyline, isClicked, coords, amount, coords1 }) {\n    const canvas = polyline\n    useEffect(() => {\n        return () => {\n            // polyline.style.cssText = 'display:none;'\n        }\n    }, [])\n\n    const idInterval = useRef(null)\n    let ctx = canvas.getContext('2d')\n\n    applyLayout(canvas)\n\n    useEffect(() => {\n        // return () => idInterval.current && clearInterval(idInterval.current)\n    }, [])\n\n    ctx.lineWidth = 1.3\n    ctx.strokeStyle = '#f1bb00'\n\n    let dots = Array(amount + 1)\n    let dots1 = Array(amount + 1)\n    let dots2 = Array(amount + 1)\n    let dots3 = Array(amount + 1)\n\n    const stepX = Math.floor((coords.last.x - coords.first.x) / amount)\n    const stepY = Math.floor((coords.last.y - coords.first.y) / amount)\n    const stepX1 = Math.floor((coords1.last.x - coords1.first.x) / amount)\n    const stepY1 = Math.floor((coords1.last.y - coords1.first.y) / amount)\n\n    const getRandomInt = (min, max) => {\n        return Math.floor(min + Math.random() * (max + 1 - min))\n    }\n\n    const set = (dots, coords, stepX, stepY) => {\n        dots[0] = { x: coords.first.x, y: coords.first.y }\n        for (let i = 1; i < amount; ++i) {\n            dots[i] = {\n                x: coords.first.x + i * stepX + getRandomInt(-10, 10),\n                y: coords.first.y + i * stepY + getRandomInt(-20, 20),\n            }\n        }\n        dots[amount] = { x: coords.last.x, y: coords.last.y }\n    }\n\n    const mix = () => {\n        for (let i = 1; i < amount; ++i) {\n            let randy = getRandomInt(-60, 60)\n\n            let newValY = coords.first.y + i * stepY + randy\n            let newValY1 = coords.first.y + i * stepY - randy\n\n            let newValY2 = coords1.first.y + i * stepY1 + randy\n            let newValY3 = coords1.first.y + i * stepY1 - randy\n\n            let anim = true\n\n            let id = requestAnimationFrame(interval)\n            function interval() {\n                if (\n                    Math.abs(dots[i].y - newValY) <= 0.01 ||\n                    Math.abs(dots2[i].y - newValY2) <= 0.01\n                ) {\n                    cancelAnimationFrame(id)\n                    anim = false\n                }\n                moveLine(dots, i, newValY)\n                moveLine(dots1, i, newValY1)\n\n                moveLine(dots2, i, newValY2)\n                moveLine(dots3, i, newValY3)\n\n                ctx.clearRect(0, 0, canvas.width, canvas.height)\n                ctx.strokeStyle = '#f1bb00'\n                draw(dots)\n                draw(dots2)\n                ctx.strokeStyle = '#7344f4'\n                draw(dots1)\n                draw(dots3)\n                if (anim) requestAnimationFrame(interval)\n            }\n        }\n    }\n\n    const draw = (dots) => {\n        ctx.beginPath()\n        ctx.moveTo(dots[0].x, dots[0].y)\n        dots.forEach((dot) => {\n            ctx.lineTo(dot.x, dot.y)\n            ctx.moveTo(dot.x, dot.y)\n        })\n        ctx.stroke()\n    }\n\n    let i = 1\n    const length = dots.length - 1\n\n    function draw1(x1, y1, x2, y2, x3, y3, x4, y4) {\n        function run() {\n            let j = 0\n            const smoothFactor = 20\n\n            const smallStepX =\n                (dots[length - i].x - dots[length - i + 1].x) / smoothFactor\n            const smallStepY =\n                (dots[length - i].y - dots[length - i + 1].y) / smoothFactor\n\n            const smallStepX1 =\n                (dots1[length - i].x - dots1[length - i + 1].x) / smoothFactor\n            const smallStepY1 =\n                (dots1[length - i].y - dots1[length - i + 1].y) / smoothFactor\n            const smallStepX2 = (dots2[i].x - dots2[i - 1].x) / smoothFactor\n            const smallStepY2 = (dots2[i].y - dots2[i - 1].y) / smoothFactor\n\n            const smallStepX3 = (dots3[i].x - dots3[i - 1].x) / smoothFactor\n            const smallStepY3 = (dots3[i].y - dots3[i - 1].y) / smoothFactor\n\n            let flag = true\n\n            let id = requestAnimationFrame(() =>\n                smooth(x1, y1, x2, y2, x3, y3, x4, y4)\n            )\n\n            function smooth(x1, y1, x2, y2, x3, y3, x4, y4) {\n                if (j === smoothFactor) {\n                    cancelAnimationFrame(id)\n                    flag = false\n                }\n\n                if (flag) {\n                    ctx.beginPath()\n                    ctx.strokeStyle = '#f1bb00'\n                    ctx.moveTo(x1, y1)\n                    ctx.lineTo(x1 + smallStepX, y1 + smallStepY)\n                    ctx.stroke()\n\n                    ctx.beginPath()\n                    ctx.strokeStyle = '#7344f4'\n                    ctx.moveTo(x2, y2)\n                    ctx.lineTo(x2 + smallStepX1, y2 + smallStepY1)\n                    ctx.stroke()\n\n                    ctx.beginPath()\n                    ctx.strokeStyle = '#f1bb00'\n                    ctx.moveTo(x3, y3)\n                    ctx.lineTo(x3 + smallStepX2, y3 + smallStepY2)\n                    ctx.stroke()\n\n                    ctx.beginPath()\n                    ctx.strokeStyle = '#7344f4'\n                    ctx.moveTo(x4, y4)\n                    ctx.lineTo(x4 + smallStepX3, y4 + smallStepY3)\n                    ctx.stroke()\n\n                    j++\n\n                    requestAnimationFrame(() =>\n                        smooth(\n                            x1 + smallStepX,\n                            y1 + smallStepY,\n                            x2 + smallStepX1,\n                            y2 + smallStepY1,\n                            x3 + smallStepX2,\n                            y3 + smallStepY2,\n                            x4 + smallStepX3,\n                            y4 + smallStepY3\n                        )\n                    )\n                } else {\n                    i++\n                    if (i < dots.length) {\n                        draw1(\n                            dots[length - i + 1].x,\n                            dots[length - i + 1].y,\n                            dots1[length - i + 1].x,\n                            dots1[length - i + 1].y,\n                            dots2[i - 1].x,\n                            dots2[i - 1].y,\n                            dots3[i - 1].x,\n                            dots3[i - 1].y\n                        )\n                    } else {\n                        if (isClicked)\n                            idInterval.current = setInterval(mix, 2000)\n                    }\n                }\n            }\n        }\n\n        run()\n    }\n\n    useEffect(() => {\n        set(dots, coords, stepX, stepY)\n        set(dots1, coords, stepX, stepY)\n        set(dots2, coords1, stepX1, stepY1)\n        set(dots3, coords1, stepX1, stepY1)\n        if (isClicked) {\n            // draw1(\n            //     dots[length].x,\n            //     dots[length].y,\n            //     dots1[length].x,\n            //     dots1[length].y,\n            //     dots2[0].x,\n            //     dots2[0].y,\n            //     dots3[0].x,\n            //     dots3[0].y\n            // )\n        }\n        if (!isClicked) {\n            // ctx.restore()\n            // ctx.clearRect(0, 0, canvas.width, canvas.height)\n            // idInterval.current && clearInterval(idInterval.current)\n        }\n    }, [isClicked])\n\n    function moveLine(dots, i, val1) {\n        if (dots[i].y > val1) dots[i].y -= 1\n        else dots[i].y += 1\n    }\n\n    return null\n}\n","import { useState, useEffect } from 'react'\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window\n    return {\n        width,\n        height,\n    }\n}\n\nexport default function useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(\n        getWindowDimensions()\n    )\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions())\n        }\n\n        window.addEventListener('resize', handleResize)\n        return () => window.removeEventListener('resize', handleResize)\n    }, [])\n\n    return windowDimensions\n}\n","import React, { useEffect, useState, useCallback } from 'react'\nimport './Cases.css'\nimport Cube from '../Cube/Cube'\nimport { Link } from 'react-router-dom'\nimport { useNavigate } from 'react-router-dom'\nimport Line from '../Line/Line'\nimport useWindowDimensions from '../useWindowDimension/useWindowDimensions'\n\nexport const Cases = ({\n    polyline,\n    casesArray,\n    coordsToX,\n    coordsToY,\n    isClicked,\n    canvases,\n    isCanvasesHidded,\n    isCasesEntered,\n}) => {\n    const { width, height } = useWindowDimensions()\n\n    useEffect(() => {\n        document.getElementById('polyline1').classList.add('displayNone')\n        document.getElementById('polyline2').classList.add('displayNone')\n    }, [])\n\n    const offCanvases = useCallback(() => {\n        canvases.map((i) => i.classList.add('displayNone'))\n        polyline.classList.remove('displayNone')\n    }, [canvases, polyline.classList])\n\n    const onCanvases = useCallback(() => {\n        canvases.map((i) => i.classList.remove('displayNone'))\n        polyline.classList.add('displayNone')\n    }, [canvases, polyline.classList])\n\n    useEffect(() => {\n        if (isCanvasesHidded) offCanvases()\n        else onCanvases()\n        if (!isCasesEntered && isCanvasesHidded)\n            canvases[0].classList.add('displayNone')\n        else canvases[0].classList.remove('displayNone')\n    }, [isCanvasesHidded, offCanvases, onCanvases, isCasesEntered, canvases])\n\n    const [mcStateHovered, setMcStateHovered] = useState(true)\n    const [pumaStateHovered, setPumaStateHovered] = useState(false)\n    const [flintStateHovered, setFlintStateHovered] = useState(false)\n    const [bigStateHovered, setBigStateHovered] = useState(false)\n    const [pmStateHovered, setPMStateHovered] = useState(false)\n    const [naviStateHovered, setNaviStateHovered] = useState(false)\n\n\n    const [showCube, setShowCube] = useState('')\n\n    const [universalBack, setUniversalBack] = useState('')\n    const [prevUniversalBack, setPrevUniversalBack] = useState('')\n\n    const navigate = useNavigate()\n\n   \n    useEffect(() => {\n        if (prevUniversalBack === 'mcBackdestroyed') {\n            setPumaStateHovered(false)\n            setBigStateHovered(false)\n            setPMStateHovered(false)\n            setNaviStateHovered(false)\n            setFlintStateHovered(false)\n            if (universalBack === 'mcBack') setMcStateHovered(true)\n            else {\n                setUniversalBack('')\n                setMcStateHovered(false)\n            }\n        }\n\n        if (prevUniversalBack === 'pBackdestroyed') {\n            setMcStateHovered(false)\n            setBigStateHovered(false)\n            setPMStateHovered(false)\n            setNaviStateHovered(false)\n            setFlintStateHovered(false)\n            if (universalBack === 'pBack') setPumaStateHovered(true)\n            else {\n                setUniversalBack('')\n                setPumaStateHovered(false)\n            }\n        }\n\n        if (prevUniversalBack === 'fBackdestroyed') {\n            setMcStateHovered(false)\n            setBigStateHovered(false)\n            setPMStateHovered(false)\n            setNaviStateHovered(false)\n            setPumaStateHovered(false)\n            if (universalBack === 'fBack') setFlintStateHovered(true)\n            else setFlintStateHovered(false)\n        }\n\n        if (prevUniversalBack === 'lBackdestroyed') {\n            setFlintStateHovered(false)\n            setMcStateHovered(false)\n            setPMStateHovered(false)\n            setNaviStateHovered(false)\n            setPumaStateHovered(false)\n            if (universalBack === 'lBack') setBigStateHovered(true)\n            else setBigStateHovered(false)\n        }\n\n        if (prevUniversalBack === 'pmBackdestroyed') {\n            setFlintStateHovered(false)\n            setMcStateHovered(false)\n            setNaviStateHovered(false)\n            setPumaStateHovered(false)\n            setBigStateHovered(false)\n            if (universalBack === 'pmBack') setPMStateHovered(true)\n            else setPMStateHovered(false)\n        }\n\n        if (prevUniversalBack === 'pmBackdestroyed') {\n            setPMStateHovered(false)\n            setFlintStateHovered(false)\n            setMcStateHovered(false)\n            setPumaStateHovered(false)\n            setBigStateHovered(false)\n            if (universalBack === 'nBack') setNaviStateHovered(true)\n            else setNaviStateHovered(false)\n        }\n    }, [universalBack, prevUniversalBack])\n\n    const onCaseEnter = (item) => {\n        setUniversalBack(item.background)\n        setPrevUniversalBack(item.background + 'destroyed')\n        setShowCube('displayNone')\n    }\n    const onCaseLeave = () => {\n        setUniversalBack('destroyBack')\n        setShowCube('')\n    }\n    const ToFullScreen = () => {\n        const elem = document.getElementById('casesLayoutElem')\n        elem.classList.add('casesFullScreen')\n    }\n\n    const parallaxHandler = (e) => {\n        if (bigStateHovered || pmStateHovered || naviStateHovered) {\n            const m = (e.clientX - window.innerWidth / 1.5) / 1\n            const n = (e.clientY - window.innerHeight / 1.3) / 1\n            document.getElementById(\n                'parallaxImageBlock'\n            ).style.cssText = `transform:\n            perspective(1000px) \n            rotateY(${m}deg) \n            rotateX(${n}deg) \n            scale3d(1,1,1)\n            `\n        } \n        else {\n            const x = (e.clientX - window.innerWidth / 1.5) / 26\n            const y = (e.clientY - window.innerHeight / 1.7) / 10\n            document.getElementById(\n                'parallaxImageBlock'\n            ).style.cssText = `transform:\n            perspective(1000px) \n            rotateY(${x}deg) \n            rotateX(${y}deg) \n            scale3d(1,1,1)\n            `\n        }\n    }\n\n    // if (isClicked) {\n    return (\n        <div\n            id=\"casesLayoutElem\"\n            className={isClicked ? ' casesLayout' : ' reversedLayout'}\n        >\n            <div\n                id=\"parallaxImageBlock\"\n                className={\n                    universalBack ? `${universalBack}` : `${prevUniversalBack}`\n                }\n            ></div>\n            <div className=\"casesArray\">\n                {casesArray.slice(0, 6).map((item) => (\n                    <div\n                        onMouseMove={parallaxHandler}\n                        id=\"parallaxCase\"\n                        key={item.id}\n                        onMouseEnter={() => onCaseEnter(item)}\n                        onMouseLeave={() => onCaseLeave()}\n                        className={item.className}\n                        onClick={() => {\n                            navigate(`/cases/${item.id}`)\n                            ToFullScreen()\n                        }}\n                    >\n                        {item.title}\n                    </div>\n                ))}\n            </div>\n            <Line\n                polyline={polyline}\n                isClicked={isClicked}\n                coords={{\n                    first: {\n                        x: 0,\n                        y: height * 0.38,\n                    },\n                    last: {\n                        x: coordsToX,\n                        y: coordsToY,\n                    },\n                }}\n                coords1={{\n                    first: {\n                        x: coordsToX,\n                        y: coordsToY,\n                    },\n                    last: {\n                        x: width,\n                        y: height * 0.24,\n                    },\n                }}\n                amount={7}\n            />\n            <Cube showCube={`${showCube}`} />\n            <div className={mcStateHovered ? 'casesMain' : ' displayNone'}>\n                <p>McDonald's</p>\n                <p>Granding, VFX, motion</p>\n            </div>\n            <div className={pumaStateHovered ? 'casesMain' : ' displayNone'}>\n                <p>Puma Ukraine</p>\n                <p>VFX, motion</p>\n            </div>\n            <div className={flintStateHovered ? 'casesMain' : ' displayNone'}>\n                <p>Flint</p>\n                <p>Granding, VFX, motion</p>\n            </div>\n            <div className={bigStateHovered ? 'casesMain' : ' displayNone'}>\n                <p>Little big</p>\n                <p>Granding, VFX, motion</p>\n            </div>\n            <div className={pmStateHovered ? 'casesMain' : ' displayNone'}>\n                <p>Parimatch</p>\n                <p>Granding, VFX, motion</p>\n            </div>\n            <div className={naviStateHovered ? 'casesMain' : ' displayNone'}>\n                <p>Navi</p>\n                <p>Granding, VFX, motion</p>\n            </div>\n            <div className=\"casesTextBlock\">\n                <div className=\"casesArrow\" />\n                <p>\n                    We’re always looking the truth about the brand we work with\n                    and tell it naturaly and gorgeous, like no one else before.\n                </p>\n            </div>\n            <Link to=\"/cases\" onClick={() => ToFullScreen()}>\n                <span className=\"shape pos3\" />\n                <div className=\"casesBtn gradientBtn\">\n                    <p>\n                        Explore\n                        <br />\n                        all\n                        <br />\n                        cases\n                    </p>\n                </div>\n            </Link>\n        </div>\n    )\n    // }else {\n    //     return <div className=\"reversedLayout\"></div>\n    // }\n}\n","import React, { useEffect, useCallback } from 'react'\nimport './Hire.css'\nimport Cube from '../Cube/Cube'\nimport { Link } from 'react-router-dom'\nimport Line from '../Line/Line'\nimport useWindowDimensions from '../useWindowDimension/useWindowDimensions'\n\nexport const Hire = ({\n    polyline,\n    coordsToX,\n    coordsToY,\n    isClicked,\n    canvases,\n    isCanvasesHidded,\n    isHireEntered,\n}) => {\n    useEffect(() => {\n        document.getElementById('polyline').classList.add('displayNone')\n        document.getElementById('polyline1').classList.add('displayNone')\n    }, [])\n\n    const { width, height } = useWindowDimensions()\n\n    const offCanvases = useCallback(() => {\n        canvases.map((i) => i.classList.add('displayNone'))\n        polyline.classList.remove('displayNone')\n    }, [canvases, polyline.classList])\n\n    const onCanvases = useCallback(() => {\n        canvases.map((i) => i.classList.remove('displayNone'))\n        polyline.classList.add('displayNone')\n    }, [canvases, polyline.classList])\n\n    useEffect(() => {\n        if (isCanvasesHidded) offCanvases()\n        else onCanvases()\n\n        if (!isHireEntered && isCanvasesHidded)\n            canvases[2].classList.add('displayNone')\n        else canvases[2].classList.remove('displayNone')\n    }, [isCanvasesHidded, isHireEntered, onCanvases, offCanvases, canvases])\n\n    const ToFullScreen = () => {\n        const elem = document.getElementById('hireLayoutElem')\n        elem.classList.add('hireFullScreen')\n    }\n    return (\n        <div\n            id=\"hireLayoutElem\"\n            className={isClicked ? 'hireLayout' : 'hireLayoutReversed'}\n        >\n            <Cube />\n            <Line\n                polyline={polyline}\n                isClicked={isClicked}\n                coords={{\n                    first: {\n                        x: width * 0.85,\n                        y: 0,\n                    },\n                    last: {\n                        x: coordsToX + 20,\n                        y: coordsToY,\n                    },\n                }}\n                coords1={{\n                    first: {\n                        x: coordsToX + 20,\n                        y: coordsToY + 20,\n                    },\n                    last: {\n                        x: 0,\n                        y: height,\n                    },\n                }}\n                amount={7}\n            />\n            <div className=\"hireBLock\">\n                <div className=\"hireBLock__left\">\n                    <div className=\"hireBLock__left__top\">\n                        <Link to=\"/wearefx\">Instagram</Link>\n                        <Link to=\"/wearefx\">Facebook</Link>\n                        <Link to=\"/wearefx\">behance</Link>\n                    </div>\n                    <div className=\"hireBLock__left__middle\">\n                        <p>\n                            All contents of this website are the property oF\n                            wearefx STUDIO. No part of this site, including all\n                            text and images, may be reproduced in any form\n                            without the prior written consent oF wearefx STUDIO\n                            ©2021\n                        </p>\n                        <div className=\"arrowToTop\" />\n                    </div>\n                    <h3 className=\"hireBLock__left__bottom\">\n                        We’re curious how we can\n                        <br />\n                        help, get in touch 👋\n                    </h3>\n                </div>\n                <div className=\"hireBLock__right\">\n                    <div className=\"hireBLock__right__top\">\n                        <p>\n                            Wearefx © 2021 by\n                            <Link\n                                className=\"violet_on_hover\"\n                                to=\"/wearefx\"\n                                onClick={() => ToFullScreen()}\n                            >\n                                {' '}\n                                Brāh lab ﹤\n                            </Link>\n                        </p>\n                        <Link\n                            className=\"violet_on_hover\"\n                            to=\"/wearefx\"\n                            onClick={() => ToFullScreen()}\n                        >\n                            Privacy Policy ﹤\n                        </Link>\n                    </div>\n                    <div className=\"hireBLock__right__middle\">\n                        <p>For general inquiries<br />& new projects </p>\n                        <h3>contact@wearefx.xyz</h3>\n                    </div>\n                    <div className=\"hireBLock__right__bottom\">\n                        <div className=\"contact\">\n                            <p>Studio manager</p>\n                            <p>Alex Dysenko</p>\n                            <div className=\"contact__tel\">\n                                <p>a@wearefx.xyz</p>\n                                <Link to=\"tel:+380935925000\">\n                                    +380935925000\n                                </Link>\n                            </div>\n                        </div>\n                        <div className=\"contact\">\n                            <p>Studio manager</p>\n                            <p>Stas Ravsyi</p>\n                            <div className=\"contact__tel\">\n                                <p>s@wearefx.xyz</p>\n                                <a href=\"tel:+380636312065\">+380636312065</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Link to=\"/hire\" onClick={() => ToFullScreen()}>\n                <span className=\"shape pos1\"/>\n                <div className=\"hireBtn gradientBtn \">\n                    <p>\n                        chat with us\n                        <br /> in telegram\n                    </p>\n                </div>\n            </Link>\n        </div>\n    )\n}\n","import React, { useEffect, forwardRef, useState } from 'react'\nimport './MainPageButton.css'\n\nexport const MainPageButton = forwardRef(\n    ({ title, className, isHovered, onClick, isClicked, canvas}, ref) => {\n\n        const [hoverState, setHoverState] = useState(isHovered)\n\n        useEffect(() => {\n            if(isHovered)setHoverState(true)\n            else setHoverState(false)\n        }, [isHovered])\n\n\n        useEffect(() => {\n            if(hoverState)canvas.classList.add('displayNone')\n            else canvas.classList.remove('displayNone')\n        }, [hoverState,canvas.classList])\n\n        return (\n            <div>\n                <div\n                    onClick={() => onClick()}\n                    ref={ref}\n                    className={`${className} MainPageButton`}\n                >\n                    {isClicked ? ' ' : title}\n                </div>\n            </div>\n        )\n    }\n)\n","import React, { useEffect, useCallback } from 'react'\nimport './Story.css'\nimport 'animate.css'\nimport Cube from '../Cube/Cube'\nimport { Link } from 'react-router-dom'\nimport Line from '../Line/Line'\nimport useWindowDimensions from '../useWindowDimension/useWindowDimensions'\n\nexport const Story = ({\n    polyline,\n    coordsToX,\n    coordsToY,\n    isClicked,\n    canvases,\n    isCanvasesHidded,\n    isStoryEntered,\n}) => {\n    const { width, height } = useWindowDimensions()\n\n    useEffect(() => {\n        document.getElementById('polyline').classList.add('displayNone')\n        document.getElementById('polyline2').classList.add('displayNone')\n    }, [])\n\n    const offCanvases = useCallback(() => {\n        canvases.map((i) => i.classList.add('displayNone'))\n        polyline.classList.remove('displayNone')\n    }, [canvases, polyline.classList])\n\n    const onCanvases = useCallback(() => {\n        canvases.map((i) => i.classList.remove('displayNone'))\n        polyline.classList.add('displayNone')\n    }, [canvases, polyline.classList])\n\n    useEffect(() => {\n        if (isCanvasesHidded) offCanvases()\n        else onCanvases()\n        if (!isStoryEntered && isCanvasesHidded)\n            canvases[1].classList.add('displayNone')\n        else canvases[1].classList.remove('displayNone')\n    }, [isCanvasesHidded, canvases, isStoryEntered, offCanvases, onCanvases])\n\n    const ToFullScreen = () => {\n        const elem = document.getElementById('storyLayoutElem')\n        elem.classList.add('storyFullScreen')\n    }\n\n    return (\n        <div\n            id=\"storyLayoutElem\"\n            className={isClicked ? 'storyLayout' : 'reversedLayoutStory'}\n        >\n            <Cube />\n            <Line\n                polyline={polyline}\n                isClicked={isClicked}\n                coords={{\n                    first: {\n                        x: width * 0.18,\n                        y: 0,\n                    },\n                    last: {\n                        x: coordsToX,\n                        y: coordsToY + 23,\n                    },\n                }}\n                coords1={{\n                    first: {\n                        x: coordsToX,\n                        y: coordsToY + 23,\n                    },\n                    last: {\n                        x: width,\n                        y: height,\n                    },\n                }}\n                amount={7}\n            />\n            <div className=\"storyBlock\">\n                <h3>\n                    We are full-service experiential VFX production studio based\n                    in Ukraine inspired by the creative potential of emerging\n                    technologies. 😎\n                </h3>\n                <div>\n                    <Link to=\"/cases\" onClick={() => ToFullScreen()}>our cases ﹤</Link>\n                    <Link to=\"/hire\" onClick={() => ToFullScreen()}>hire us ﹤</Link>\n                    <div className=\"casesArrow\" />\n                    <p>\n                        As a wide collective of highly skilled creatives, we\n                        vizualize any content on any screen and any space.\n                        Create CG and VFX for Advertising, TV, Print, digital,\n                        series, short and now long format films, games, VR and\n                        AR experiences.\n                    </p>\n                    <p>\n                        A deeply collaborative approach and respect for every\n                        aspect and role in the creation process stands at our\n                        core.\n                    </p>\n                </div>\n            </div>\n            <Link to=\"/story\" onClick={() => ToFullScreen()}>\n                <span className=\"shape pos2\"/>\n                <div className=\"storyBtn gradientBtn\">\n                    <p>\n                        View our\n                        <br />\n                        expertise &<br />\n                        technologies\n                    </p>\n                </div>\n            </Link>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport Typed from 'typed.js'\nimport './TypingText.css'\n\nconst TypingText = ({ isClicked }) => {\n    const element = useRef(null)\n\n    useEffect(() => {\n        if (!isClicked) {\n        const typed = new Typed(element.current, {\n            strings: [\n                \"Welcome\\nto\\nWeareFX,\\ncreative\\nstudio\\rwith\\nbig\\nideas\",\n                \"Where\\nbeauty\\nand\\nfunction\\nare\\ncrafted\\ntogether\",\n                \"Working\\nacross\\nall\\nmedia\\nchannels\\nplatforms\",\n            ],\n            startDelay: 1000,\n            typeSpeed: 24,\n            backSpeed: 24,\n            backDelay: 1000,\n            loop: true,\n            showBlink: true,\n        })\n        return () => typed.destroy()\n        } else return null\n    }, [isClicked])\n\n        return (\n            <div className=\"typing__text\">\n                <span className=\"typing__text\" ref={element}></span>\n            </div>\n        )\n}\n\nexport default TypingText\n","export default __webpack_public_path__ + \"static/media/videoPower.46fefcbf.mp4\";","import React, { useEffect, useState, useRef } from 'react'\nimport { Cases } from '../Cases/Cases'\nimport { Hire } from '../Hire/Hire'\nimport { MainPageButton } from '../MainPageButton/MainPageButton'\nimport { Story } from '../Story/Story'\nimport TypingText from '../TypingText/TypingText'\nimport { Link } from 'react-router-dom'\nimport './MainPage.css'\nimport './MainPageMedia.css'\n\nimport videoPower from './video/videoPower.mp4'\n\nconst applyLayout = (canvas) => {\n    canvas.width = canvas.clientWidth\n    canvas.height = canvas.clientHeight\n}\n\nconst MainPage = ({\n    is1BtnHovered,\n    is2BtnHovered,\n    is3BtnHovered,\n    setIs3BtnHovered,\n    setIs2BtnHovered,\n    setIs1BtnHovered,\n}) => {\n    const casesArray = [\n        {\n            title: \"McDonald's\",\n            id: 1,\n            className: 'mcDonalds',\n            background: 'mcBack',\n        },\n        {\n            title: 'Puma',\n            id: 2,\n            className: 'mcDonalds',\n            background: 'pBack',\n        },\n        {\n            title: 'Flint',\n            id: 3,\n            className: 'mcDonalds',\n            background: 'fBack',\n        },\n        {\n            title: 'Little big',\n            id: 4,\n            className: 'mcDonalds',\n            background: 'lBack',\n        },\n        {\n            title: 'Parimatch',\n            id: 5,\n            className: 'mcDonalds',\n            background: 'pBack',\n            // pmBack\n        },\n        {\n            title: 'Navi',\n            id: 6,\n            className: 'mcDonalds',\n            background: 'nBack',\n        },\n    ]\n\n    const [buttonsCoords, setButtonsCoords] = useState([])\n\n    const btn1Ref = useRef(null)\n    const btn2Ref = useRef(null)\n    const btn3Ref = useRef(null)\n\n    const canvas1 = document.getElementById('overlay1')\n    const canvas2 = document.getElementById('overlay2')\n    const canvas3 = document.getElementById('overlay3')\n\n    const polyline = document.getElementById('polyline')\n    const polyline1 = document.getElementById('polyline1')\n    const polyline2 = document.getElementById('polyline2')\n\n    const [isCasesClicked, setIsCasesClicked] = useState(false)\n    const [isCasesEntered, setIsCasesEntered] = useState(false)\n\n    const [isStoryClicked, setIsStoryClicked] = useState(false)\n    const [isStoryEntered, setIsStoryEntered] = useState(false)\n\n    const [isHireClicked, setIsHireClicked] = useState(false)\n    const [isHireEntered, setIsHireEntered] = useState(false)\n\n    const [isCanvasesHidded, setIsCanvasesHidded] = useState(false)\n\n    const PlaceCursor = document.getElementsByClassName('movable')[0]\n\n    const on1BtnEnter = () => {\n        setIs1BtnHovered(true)\n        setIsCasesEntered(true)\n        canvas1.classList.add('displayNone')\n    }\n    const on1BtnLeave = () => {\n        setIs1BtnHovered(false)\n        setIsCasesEntered(false)\n        canvas1.classList.remove('displayNone')\n    }\n    const on2BtnEnter = () => {\n        setIsStoryEntered(true)\n        canvas2.classList.add('displayNone')\n        setIs2BtnHovered(true)\n    }\n    const on2BtnLeave = () => {\n        setIsStoryEntered(false)\n        canvas2.classList.remove('displayNone')\n        setIs2BtnHovered(false)\n    }\n    const on3BtnEnter = () => {\n        setIsHireEntered(true)\n        canvas3.classList.add('displayNone')\n        setIs3BtnHovered(true)\n    }\n    const on3BtnLeave = () => {\n        setIsHireEntered(false)\n        canvas3.classList.remove('displayNone')\n        setIs3BtnHovered(false)\n    }\n    const joinPoints = (ctx, from, to) => {\n        const stroke = ctx.createLinearGradient(from.x, from.y, to.x, to.y)\n        if (isCasesEntered || isStoryEntered || isHireEntered) {\n            stroke.addColorStop(0, 'rgba(255, 255, 255, 0)')\n            stroke.addColorStop(0.4, 'rgba(255, 255, 255, 0.2)')\n            stroke.addColorStop(0.6, 'rgba(255, 255, 255, 0.9)')\n            stroke.addColorStop(0.9, 'rgba(255, 255, 255, 0.02)')\n        } else {\n            stroke.addColorStop(0, 'rgba(255, 255, 255, 0)')\n            stroke.addColorStop(0.4, 'rgba(255, 255, 255, 0.2)')\n            stroke.addColorStop(0.5, 'white')\n            stroke.addColorStop(0.9, 'rgba(255, 255, 255, 0.2)')\n            stroke.addColorStop(1, 'rgba(255, 255, 255, 0)')\n        }\n        ctx.strokeStyle = stroke\n        ctx.lineWidth = 1\n\n        ctx.beginPath()\n        ctx.moveTo(from.x, from.y)\n\n        if (isCasesEntered) ctx.lineTo(to.x + 4, to.y - 5)\n        if (isStoryEntered) ctx.lineTo(to.x - 50, to.y + 25)\n        if (isHireEntered) ctx.lineTo(to.x + 50, to.y + 25)\n        else ctx.lineTo(to.x, to.y)\n        ctx.stroke()\n    }\n    function drawAnimLine(canvas, mouseCoords, elementCoords) {\n        const ctx = canvas.getContext('2d')\n        function draw() {\n            ctx.clearRect(0, 0, canvas.width, canvas.height)\n            const x1 = elementCoords.x - window.scrollX\n            const y1 = elementCoords.y - window.scrollY\n            joinPoints(ctx, { x: x1, y: y1 }, mouseCoords)\n        }\n        requestAnimationFrame(draw)\n    }\n\n    const btnMove1 = (e) => {\n        if (!buttonsCoords.length) return\n        if (\n            (Math.abs(buttonsCoords[0].y - e.clientY) < 100 &&\n                Math.abs(buttonsCoords[0].x - e.clientX) < 100) ||\n            (Math.abs(buttonsCoords[1].y - e.clientY) < 100 &&\n                Math.abs(buttonsCoords[1].x - e.clientX) < 100) ||\n            (Math.abs(buttonsCoords[2].y - e.clientY) < 100 &&\n                Math.abs(buttonsCoords[2].x - e.clientX) < 100)\n        )\n            PlaceCursor.style.transform = 'scale(2.5) translate(-20%, -10%)'\n        else if (\n            (Math.abs(buttonsCoords[0].y - e.clientY) < 180 &&\n                Math.abs(buttonsCoords[0].x - e.clientX) < 180) ||\n            (Math.abs(buttonsCoords[1].y - e.clientY) < 180 &&\n                Math.abs(buttonsCoords[1].x - e.clientX) < 180) ||\n            (Math.abs(buttonsCoords[2].y - e.clientY) < 180 &&\n                Math.abs(buttonsCoords[2].x - e.clientX) < 180)\n        )\n            PlaceCursor.style.transform = 'scale(1.7) translate(-30%, -20%)'\n        else {\n            PlaceCursor.style.transition = 'background 0.5s ease-in-out'\n            PlaceCursor.style.transform = 'scale(1) translate(-50%, -40%)'\n        }\n    }\n\n    const onMove = (e) => {\n        if (!buttonsCoords.length) return\n        drawAnimLine(canvas1, { x: e.clientX, y: e.clientY }, buttonsCoords[0])\n        drawAnimLine(canvas2, { x: e.clientX, y: e.clientY }, buttonsCoords[1])\n        drawAnimLine(canvas3, { x: e.clientX, y: e.clientY }, buttonsCoords[2])\n    }\n    useEffect(() => {\n        applyLayout(canvas1)\n        applyLayout(canvas2)\n        applyLayout(canvas3)\n\n        btn1Ref.current.addEventListener('mouseover', on1BtnEnter)\n        btn1Ref.current.addEventListener('mouseleave', on1BtnLeave)\n\n        btn2Ref.current.addEventListener('mouseover', on2BtnEnter)\n        btn2Ref.current.addEventListener('mouseleave', on2BtnLeave)\n\n        btn3Ref.current.addEventListener('mouseover', on3BtnEnter)\n        btn3Ref.current.addEventListener('mouseleave', on3BtnLeave)\n\n        if (!buttonsCoords.length) {\n            setButtonsCoords([\n                btn1Ref.current?.getBoundingClientRect(),\n                btn2Ref.current?.getBoundingClientRect(),\n                btn3Ref.current?.getBoundingClientRect(),\n            ])\n        }\n        window.addEventListener('mousemove', onMove)\n\n        window.addEventListener('mousemove', btnMove1)\n\n        return () => {\n            window.removeEventListener('mousemove', onMove)\n            window.removeEventListener('mousemove', btnMove1)\n\n            btn1Ref.current?.removeEventListener('mouseover', on1BtnEnter)\n            btn1Ref.current?.removeEventListener('mouseleave', on1BtnLeave)\n\n            btn2Ref.current?.removeEventListener('mouseover', on2BtnEnter)\n            btn2Ref.current?.removeEventListener('mouseleave', on2BtnLeave)\n\n            btn3Ref.current?.removeEventListener('mouseover', on3BtnEnter)\n            btn3Ref.current?.removeEventListener('mouseleave', on3BtnLeave)\n        }\n    }, [\n        buttonsCoords.length,\n        is1BtnHovered,\n        is2BtnHovered,\n        is3BtnHovered,\n        on1BtnEnter,\n        on1BtnLeave,\n        on2BtnEnter,\n        on2BtnLeave,\n        on3BtnEnter,\n        on3BtnLeave,\n    ])\n\n    const casesClicked = () => {\n        setIsCanvasesHidded(!isCanvasesHidded)\n        setIsCasesClicked((isCasesClicked) => !isCasesClicked)\n    }\n    const storyClicked = () => {\n        setIsCanvasesHidded(!isCanvasesHidded)\n        setIsStoryClicked((isStoryClicked) => !isStoryClicked)\n    }\n    const hireClicked = () => {\n        setIsCanvasesHidded(!isCanvasesHidded)\n        setIsHireClicked((isHireClicked) => !isHireClicked)\n    }\n    // useEffect(() => {\n    //     if (\n    //         (isCasesClicked && isCasesEntered) ||\n    //         (isStoryClicked && isStoryEntered) ||\n    //         (isHireClicked && isHireEntered)\n    //     )\n    //         PlaceCursor.classList.add('standartCursor')\n    // }, [\n    //     isCasesClicked,\n    //     isCasesEntered,\n    //     isStoryClicked,\n    //     isStoryEntered,\n    //     isHireClicked,\n    //     isHireEntered,\n    // ])\n\n    return (\n        <div className=\"mainPageSelector\">\n            <div className=\"no_overflow \">\n                <video className=\"showreel no_overflow\" autoPlay loop muted>\n                    <source src={videoPower} type=\"video/mp4\" />\n                </video>\n                <div className=\"showreel__mobile\" />\n                <div className=\"toner \" />\n                <div className=\"no_overflow\">\n                    <MainPageButton\n                        canvas={canvas1}\n                        onClick={casesClicked}\n                        isHovered={isCasesEntered}\n                        title=\"cases\"\n                        isClicked={isCasesClicked}\n                        className={\n                            isCasesClicked\n                                ? 'clickedCases firstCircle '\n                                : 'firstCircle'\n                        }\n                        ref={btn1Ref}\n                    />\n\n                    <MainPageButton\n                        canvas={canvas2}\n                        onClick={storyClicked}\n                        isHovered={is2BtnHovered}\n                        title=\"story\"\n                        ref={btn2Ref}\n                        isClicked={isStoryClicked}\n                        className={\n                            isStoryClicked\n                                ? 'clickedStory secondCircle'\n                                : 'secondCircle'\n                        }\n                    />\n                    <MainPageButton\n                        canvas={canvas3}\n                        onClick={hireClicked}\n                        isHovered={is3BtnHovered}\n                        title=\"hire us\"\n                        ref={btn3Ref}\n                        isClicked={isHireClicked}\n                        className={\n                            isHireClicked\n                                ? 'clickedHire thirdCircle'\n                                : 'thirdCircle'\n                        }\n                        x\n                    />\n                    <Cases\n                        polyline={polyline}\n                        casesArray={casesArray}\n                        coordsToX={buttonsCoords[0]?.x}\n                        coordsToY={buttonsCoords[0]?.y}\n                        isCasesEntered={isCasesEntered}\n                        isCanvasesHidded={isCanvasesHidded}\n                        canvases={[canvas1, canvas2, canvas3]}\n                        isClicked={isCasesClicked}\n                    />\n                    <Story\n                        polyline={polyline1}\n                        coordsToX={buttonsCoords[1]?.x}\n                        coordsToY={buttonsCoords[1]?.y}\n                        isStoryEntered={isStoryEntered}\n                        isCanvasesHidded={isCanvasesHidded}\n                        canvases={[canvas1, canvas2, canvas3]}\n                        isClicked={isStoryClicked}\n                    />\n                    <Hire\n                        polyline={polyline2}\n                        coordsToX={buttonsCoords[2]?.x}\n                        coordsToY={buttonsCoords[2]?.y}\n                        isHireEntered={isHireEntered}\n                        isCanvasesHidded={isCanvasesHidded}\n                        canvases={[canvas1, canvas2, canvas3]}\n                        isClicked={isHireClicked}\n                        setIsClicked={setIsHireClicked}\n                    />\n                    <div className={` main no_overflow`}>\n                        <div className=\"mobile__btns\">\n                            <Link to=\"/storyMobile\">\n                                <button>story</button>\n                            </Link>\n                            <Link to=\"/casesMobile\">\n                                <button>cases</button>\n                            </Link>\n                            <Link to=\"/hireMobile\">\n                                <button>hire us</button>\n                            </Link>\n                        </div>\n                        <div className=\"main__top\">\n                            <TypingText isClicked={isCasesClicked} />\n                            <div className=\"main__logo\" />\n                        </div>\n                        <div className=\"main__bottom\">\n                            <div className=\"main__bottom__video\">\n                                <div className=\"progress-done\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MainPage\n"],"sourceRoot":""}